using System;
using FirstHomeWork;
using SecondHomeWork;
using ThirdHomeWork;
using FourthHomeWork;
using FifthHomeWork;

namespace AllHomeWorks
{
    class EntryPoint
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Переменные");
            //Переменные
            FirstHW hw1 = new FirstHW();

            //Пользователь вводит 2 числа (A и B). Выведите в консоль решение (5*A+B*B)/B-A
            try
            {
                hw1.SolveTask1_1();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит 2 строковых значения(A и B).
            //Поменяйте содержимое переменных A и B местами.
            hw1.SolveTask2_1();

            //Пользователь вводит 2 числа (A и B).
            //Выведите в консоль результат деления A на B и остаток от деления.
            try
            {
                hw1.SolveTask3_1();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит 3 не равных 0 числа (A, B и С).
            //Выведите в консоль решение(значение X) линейного уравнения стандартного вида,
            //где A*X+B=C.
            try
            {
                hw1.SolveTask4_1();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит 4 числа(X1, Y1, X2, Y2),
            //описывающие координаты 2-х точек на координатной плоскости.
            //Выведите уравнение прямой в формате Y = AX + B, проходящей через эти точки.
            try
            {
                hw1.SolveTask5_1();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            Console.WriteLine("Условия");
            //Условия
            SecondHW hw2 = new SecondHW();

            //Если A>B, подсчитать A+B, если A=B, подсчитать A*B, если A<B, подсчитать A-B.
            hw2.SolveTask1_2();

            //Пользователь вводит 2 числа(X и Y).
            //Определить какой четверти принадлежит точка с координатами(X, Y)
            hw2.SolveTask2_2();

            //Пользователь вводит 3 числа(A, B и С).
            //Выведите их в консоль в порядке возрастания.
            hw2.SolveTask3_2();

            //Пользователь вводит 3 числа (A, B и С).
            //Выведите в консоль решение(значения X) квадратного уравнения стандартного вида,
            //где AXX+BX+C=0.
            try
            {
                hw2.SolveTask4_2();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит двузначное число.
            //Выведите в консоль прописную запись этого числа.
            //Например при вводе “25” в консоль будет выведено “двадцать пять”.
            try
            {
                hw2.SolveTask5_2();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            Console.WriteLine("Циклы");
            //Циклы
            ThirdHW hw3 = new ThirdHW();

            //Пользователь вводит 2 числа (A и B). Возвести число A в степень B.
            try
            {
                hw3.SolveTask1_3();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит 1 число (A).
            //Вывести все числа от 1 до 1000, которые делятся на A.
            try
            {
                hw3.SolveTask2_3();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит 1 число(A).
            //Найдите количество положительных целых чисел, квадрат которых меньше A.
            try
            {
                hw3.SolveTask3_3();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит 1 число (A).
            //Вывести наибольший делитель (кроме самого A) числа A.
            try
            {
                hw3.SolveTask4_3();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит 2 числа (A и B).
            //Вывести сумму всех чисел из диапазона от A до B, которые делятся без остатка на 7.
            //(Учтите, что при вводе B может оказаться меньше A).
            try
            {
                hw3.SolveTask5_3();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит 1 число (N).
            //Выведите N-ое число ряда фибоначчи.
            //В ряду фибоначчи каждое следующее число является суммой двух предыдущих.
            //Первое и второе считаются равными 1.
            hw3.SolveTask6_3();

            //Пользователь вводит 2 числа.
            //Найти их наибольший общий делитель используя алгоритм Евклида.
            try
            {
                hw3.SolveTask7_3();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит целое положительное число, которое является кубом целого числа N.
            //Найдите число N методом половинного деления.
            try
            {
                hw3.SolveTask8_3();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит 1 число.
            //Найти количество нечетных цифр этого числа.
            try
            {
                hw3.SolveTask9_3();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит 1 число.
            //Найти число,
            //которое является зеркальным отображением последовательности цифр заданного числа,
            //например, задано число 123, вывести 321.
            try
            {
                hw3.SolveTask10_3();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит целое положительное  число (N).
            //Выведите числа в диапазоне от 1 до N,
            //сумма четных цифр которых больше суммы нечетных.
            try
            {
                hw3.SolveTask11_3();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }

            //Пользователь вводит 2 числа.
            //Сообщите, есть ли в написании двух чисел одинаковые цифры.
            //Например, для пары 123 и 3456789, ответом будет являться “ДА”,
            //а, для пары 500 и 99 - “НЕТ”.
            hw3.SolveTask12_3();

            Console.WriteLine("Одномерные массивы");
            //Одномерные Массивы
            FourthHW hw4 = new FourthHW();

            //Найти минимальный элемент массива
            //Найти индекс минимального элемента массива
            hw4.SolveTask1_3_4();

            //Найти максимальный элемент массива
            //Найти индекс максимального элемента массива
            hw4.SolveTask2_4_4();

            //Посчитать сумму элементов массива с нечетными индексами
            hw4.SolveTask5_4();

            //Сделать реверс массива (массив в обратном направлении)
            hw4.SolveTask6_4();

            //Посчитать количество нечетных элементов массива
            hw4.SolveTask7_4();

            //Поменять местами первую и вторую половину массива,
            //например, для массива 1 2 3 4, результат 3 4 1 2,  или для 12345 - 45312.
            hw4.SolveTask8_4();

            //Отсортировать массив по возрастанию одним из способов:
            //пузырьком(Bubble), выбором(Select) или вставками(Insert)) 
            hw4.SolveTask9_4();

            //Отсортировать массив по убыванию одним из способов, (отличным от способа в 9-м задании) :
            //пузырьком(Bubble), выбором(Select) или вставками(Insert))
            hw4.SolveTask10_4();

            Console.WriteLine("Двумерные Массивы");
            //Двумерные Массивы
            FifthHW hw5 = new FifthHW();

            //Найти минимальный элемент массива
            //Найти индекс минимального элемента массива
            hw5.SolveTask1_3_5();

            //Найти максимальный элемент массива
            //Найти индекс максимального элемента массива
            hw5.SolveTask2_4_5();

            //Найти количество элементов массива, которые больше всех своих соседей одновременно
            hw5.SolveTask5_5();

            //Отразите массив относительно его главной диагонали
            hw5.SolveTask6_5();
        }
    }
}
